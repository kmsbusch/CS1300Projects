{"changed":false,"filter":false,"title":"caesarCipher.cpp","tooltip":"/Hmwk5/caesarCipher.cpp","value":"// CS1300 Spring 2019\n// Author: Kevin Busch\n// Recitation: 301 â€“ Thanika Reddy\n// Cloud9 Workspace Editor Link: https://csci1300-kevinbusch.c9users.io\n// Homework 5 - Problem #4\n#include <iostream>\n#include <string>\nusing namespace std;\n\n/*\nAlgorithm: Encode and decode strings based on a int key that is given. Does this by mapping string to ASCII and manipulating based on key.\nInput parameters: String message, integer key shift, boolean to determine if decoding or encoding.\nOutput (prints to screen): none\nReturns: Encrypted or decrypted string.\n*/\n\nstring caesarCipher(string message, int key, bool flag) // returns string, takes in string, integer, and bool\n{\n    if ((key < 0) || (key > 25)) // checks if number to shift alphabet over is between 0 and 25\n    {\n        return \"ERROR\"; //returns error if out of bounds\n    }\n    \n    if (flag == true) // encrypting function\n    {\n        string result = \"\"; //string that holds each letter after it is encrypted\n        for (int i = 0; i < message.length(); i++) //beginning loop\n        {\n            if ((int)message[i] == 32) //if value of string is a space\n            {\n                result += message[i]; // add it to the string as is, no changes\n            }\n            else if ((int)message[i] + key <= 90) // if value is before a capital z, \n            {\n                result += char(int(message[i] + key)); // add the value of the shift to the int value of the character, then change it back to a character\n            }\n            else if ((int)message[i] + key > 90)  //if value after adding shift is past capital z, \n            {\n                result += (((int)message[i] + key - 65) % 26 + 65); // loop back around to a by subtracting A's value, then modulo 26 & + 65\n            }\n        }\n        return result; //return the encrypted message \n    }\n    else if  // decryption\n    {\n        string idfk = \"\";\n        for (int i = 0; i < message.length(); i++)\n        {\n            if ((int)message[i] == 32)\n            {\n                idfk += message[i];\n            }\n            else if ((int)message[i] - key >= 65)\n            {\n                //cout << (int)message[i] << endl;\n                idfk += char(int(message[i] - key));\n                //cout << idfk << endl;\n            }\n            else if (((int)message[i] - key) < 65)\n            {\n                \n                idfk += (((int)message[i] - key) + 26);\n                \n            }\n        }\n        return idfk;\n    }\n    \n}\n\nint main()\n{\n    string string1 = caesarCipher(\"M LSTI XLMW ASVOW GSVVIGXPC\", 4, false);\n    cout << string1 << endl;\n    cout << caesarCipher(\"THIS PROBLEM MADE MY HEAD HURT A LOT\", 7, true);\n}","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":1510,"scrollleft":0,"selection":{"start":{"row":54,"column":16},"end":{"row":54,"column":16},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":59,"state":"start","mode":"ace/mode/c_cpp"}},"timestamp":1551998198778}