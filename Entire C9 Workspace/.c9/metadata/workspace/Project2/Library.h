{"filter":false,"title":"Library.h","tooltip":"/Project2/Library.h","undoManager":{"mark":14,"position":14,"stack":[[{"start":{"row":5,"column":0},"end":{"row":51,"column":0},"action":"remove","lines":["#include <iostream>","#include <fstream>","#include <string>","#include \"User.h\"","#include \"Book.h\"","using namespace std;","","/*","Algorithm: ","1.","Input parameters: ","Output (prints to screen): ","Returns: none","*/","#ifndef LIBRARY_H","#define LIBRARY_H","","class Library","{","    ","    public:","        Library(); //Sets both numBooks and numUsers to value 0.","        int getSizeBook(); //Returns sizeBook as an integer","        int getSizeUser(); //Returns sizeUser as an integer","        int getNumBooks(); //Returns numBooks as an integer","        int getNumUsers(); //Returns numUsers as an integer","        int readBooks(string); //Takes string (filename) & populates books array. Returns total # of books in books array as int","        int readRatings(string); //Takes string (filename) & populates users array. Returns total number users in users array as int.","        void printAllBooks(); //Prints all books stored in books array.","        int getCountReadBooks(string); //Takes string (username) & returns # books read by that user as an int.","        double calcAvgRating(string); //Takes string (title of book) & returns theavg rating of specified book as double","        int addUser(string); //Takes string (username) returns integer 1 if user successfully added, 0 if username already exists in users array -2 if users array already full.","        int checkOutBook(string, string, int); //Takes username, title of book, & new rating, respectively (in this order). Returns int 1 if rating successfully updated, -4 if rating value not valid & -3 if rating value is valid, but user or title doesnt exist in database.","        string viewRatings(string); //Takes string (username) & prints all books a user has provided ratings for.","        int getRating(string, string); //Takes 2 strings (username & book title) returns that user’s rating for the specified book.","        string getRecommendations(string); //Takes a string username and prints the first 5 book recommendations from the most similar (other) user.","","    private:","        const static int sizeBook = 50; //The capacity of books array (50). Constant. Should this be static too, like the ones in hw7.cpp last week?","        const static int sizeUser = 100; //The capacity of users array (100). Constant. same question as above","        Book books[50]; //An array of Book objects. Is it best to put the number in here bc I know the size already?","        User users[100]; //An array of User objects. same question as above","        int numBooks; //number of books in the database (library).","        int numUsers; //number of users in the database (library).","};","#endif",""],"id":3},{"start":{"row":5,"column":0},"end":{"row":57,"column":6},"action":"insert","lines":["#ifndef LIBRARY_H","#define LIBRARY_H","","","#include <iostream>","#include <fstream>","#include <string>","","","","","#include \"book.h\"","#include \"user.h\"","","using namespace std;","","/*","Algorithm: ","1.","Input parameters: ","Output (prints to screen): ","Returns: none","*/","","class Library","{","    ","    public:","        Library(); //Sets both numBooks and numUsers to value 0.","        int getSizeBook(); //Returns sizeBook as an integer","        int getSizeUser(); //Returns sizeUser as an integer","        int getNumBooks(); //Returns numBooks as an integer","        int getNumUsers(); //Returns numUsers as an integer","        int readBooks(string); //Takes string (filename) & populates books array. Returns total # of books in books array as int","        int readRatings(string); //Takes string (filename) & populates users array. Returns total number users in users array as int.","        void printAllBooks(); //Prints all books stored in books array.","        int getCountReadBooks(string); //Takes string (username) & returns # books read by that user as an int.","        double calcAvgRating(string); //Takes string (title of book) & returns theavg rating of specified book as double","        int addUser(string); //Takes string (username) returns integer 1 if user successfully added, 0 if username already exists in users array -2 if users array already full.","        int checkOutBook(string, string, int); //Takes username, title of book, & new rating, respectively (in this order). Returns int 1 if rating successfully updated, -4 if rating value not valid & -3 if rating value is valid, but user or title doesnt exist in database.","        void viewRatings(string); //Takes string (username) & prints all books a user has provided ratings for.","        int getRating(string, string); //Takes 2 strings (username & book title) returns that user’s rating for the specified book.","        string getRecommendations(string); //Takes a string username and prints the first 5 book recommendations from the most similar (other) user.","","    private:","        const static int sizeBook = 50; //The capacity of books array (50). Constant. Should this be static too, like the ones in hw7.cpp last week?","        const static int sizeUser = 100; //The capacity of users array (100). Constant. same question as above","        Book books[sizeBook]; //An array of Book objects. Is it best to put the number in here bc I know the size already?","        User users[sizeUser]; //An array of User objects. same question as above","        int numBooks; //number of books in the database (library).","        int numUsers; //number of users in the database (library).","};","#endif"]}],[{"start":{"row":16,"column":10},"end":{"row":16,"column":11},"action":"remove","lines":["b"],"id":4}],[{"start":{"row":16,"column":10},"end":{"row":16,"column":11},"action":"insert","lines":["B"],"id":5}],[{"start":{"row":16,"column":10},"end":{"row":16,"column":11},"action":"remove","lines":["B"],"id":6},{"start":{"row":16,"column":10},"end":{"row":16,"column":16},"action":"insert","lines":["BOOK_H"]}],[{"start":{"row":16,"column":15},"end":{"row":16,"column":16},"action":"remove","lines":["H"],"id":7},{"start":{"row":16,"column":14},"end":{"row":16,"column":15},"action":"remove","lines":["_"]},{"start":{"row":16,"column":13},"end":{"row":16,"column":14},"action":"remove","lines":["K"]},{"start":{"row":16,"column":12},"end":{"row":16,"column":13},"action":"remove","lines":["O"]},{"start":{"row":16,"column":11},"end":{"row":16,"column":12},"action":"remove","lines":["O"]}],[{"start":{"row":17,"column":10},"end":{"row":17,"column":11},"action":"remove","lines":["u"],"id":8}],[{"start":{"row":17,"column":10},"end":{"row":17,"column":11},"action":"insert","lines":["U"],"id":9}],[{"start":{"row":16,"column":10},"end":{"row":16,"column":11},"action":"insert","lines":["n"],"id":10},{"start":{"row":16,"column":11},"end":{"row":16,"column":12},"action":"insert","lines":["e"]},{"start":{"row":16,"column":12},"end":{"row":16,"column":13},"action":"insert","lines":["w"]}],[{"start":{"row":16,"column":10},"end":{"row":16,"column":13},"action":"remove","lines":["new"],"id":11},{"start":{"row":16,"column":10},"end":{"row":16,"column":13},"action":"insert","lines":["new"]}],[{"start":{"row":17,"column":10},"end":{"row":17,"column":11},"action":"insert","lines":["n"],"id":12},{"start":{"row":17,"column":11},"end":{"row":17,"column":12},"action":"insert","lines":["e"]},{"start":{"row":17,"column":12},"end":{"row":17,"column":13},"action":"insert","lines":["w"]}],[{"start":{"row":17,"column":10},"end":{"row":17,"column":13},"action":"remove","lines":["new"],"id":13},{"start":{"row":17,"column":10},"end":{"row":17,"column":13},"action":"insert","lines":["new"]}],[{"start":{"row":16,"column":12},"end":{"row":16,"column":13},"action":"remove","lines":["w"],"id":14},{"start":{"row":16,"column":11},"end":{"row":16,"column":12},"action":"remove","lines":["e"]},{"start":{"row":16,"column":10},"end":{"row":16,"column":11},"action":"remove","lines":["n"]}],[{"start":{"row":17,"column":12},"end":{"row":17,"column":13},"action":"remove","lines":["w"],"id":15},{"start":{"row":17,"column":11},"end":{"row":17,"column":12},"action":"remove","lines":["e"]},{"start":{"row":17,"column":10},"end":{"row":17,"column":11},"action":"remove","lines":["n"]}],[{"start":{"row":49,"column":12},"end":{"row":49,"column":13},"action":"insert","lines":["n"],"id":20},{"start":{"row":49,"column":13},"end":{"row":49,"column":14},"action":"insert","lines":["u"]},{"start":{"row":49,"column":14},"end":{"row":49,"column":15},"action":"insert","lines":["m"]}],[{"start":{"row":49,"column":14},"end":{"row":49,"column":15},"action":"remove","lines":["m"],"id":21},{"start":{"row":49,"column":13},"end":{"row":49,"column":14},"action":"remove","lines":["u"]},{"start":{"row":49,"column":12},"end":{"row":49,"column":13},"action":"remove","lines":["n"]}]]},"ace":{"folds":[],"scrolltop":403.3671875,"scrollleft":0,"selection":{"start":{"row":21,"column":2},"end":{"row":21,"column":2},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1553323158080,"hash":"d774019f9c481e0b03d3db98db390784257f619a"}